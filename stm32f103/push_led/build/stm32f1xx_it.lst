ARM GAS  /tmp/cc4oIYdc.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NMI_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	NMI_Handler
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	NMI_Handler:
  25              	.LFB66:
  26              		.file 1 "Src/stm32f1xx_it.c"
   1:Src/stm32f1xx_it.c **** /**
   2:Src/stm32f1xx_it.c ****   ******************************************************************************
   3:Src/stm32f1xx_it.c ****   * @file    stm32f1xx_it.c
   4:Src/stm32f1xx_it.c ****   * @brief   Interrupt Service Routines.
   5:Src/stm32f1xx_it.c ****   ******************************************************************************
   6:Src/stm32f1xx_it.c ****   *
   7:Src/stm32f1xx_it.c ****   * COPYRIGHT(c) 2018 STMicroelectronics
   8:Src/stm32f1xx_it.c ****   *
   9:Src/stm32f1xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  10:Src/stm32f1xx_it.c ****   * are permitted provided that the following conditions are met:
  11:Src/stm32f1xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  12:Src/stm32f1xx_it.c ****   *      this list of conditions and the following disclaimer.
  13:Src/stm32f1xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  14:Src/stm32f1xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  15:Src/stm32f1xx_it.c ****   *      and/or other materials provided with the distribution.
  16:Src/stm32f1xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  17:Src/stm32f1xx_it.c ****   *      may be used to endorse or promote products derived from this software
  18:Src/stm32f1xx_it.c ****   *      without specific prior written permission.
  19:Src/stm32f1xx_it.c ****   *
  20:Src/stm32f1xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:Src/stm32f1xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:Src/stm32f1xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  23:Src/stm32f1xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:Src/stm32f1xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:Src/stm32f1xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:Src/stm32f1xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:Src/stm32f1xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:Src/stm32f1xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  29:Src/stm32f1xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:Src/stm32f1xx_it.c ****   *
  31:Src/stm32f1xx_it.c ****   ******************************************************************************
  32:Src/stm32f1xx_it.c ****   */
ARM GAS  /tmp/cc4oIYdc.s 			page 2


  33:Src/stm32f1xx_it.c **** /* Includes ------------------------------------------------------------------*/
  34:Src/stm32f1xx_it.c **** #include "stm32f1xx_hal.h"
  35:Src/stm32f1xx_it.c **** #include "stm32f1xx.h"
  36:Src/stm32f1xx_it.c **** #include "stm32f1xx_it.h"
  37:Src/stm32f1xx_it.c **** 
  38:Src/stm32f1xx_it.c **** /* USER CODE BEGIN 0 */
  39:Src/stm32f1xx_it.c **** 
  40:Src/stm32f1xx_it.c **** /* USER CODE END 0 */
  41:Src/stm32f1xx_it.c **** 
  42:Src/stm32f1xx_it.c **** /* External variables --------------------------------------------------------*/
  43:Src/stm32f1xx_it.c **** 
  44:Src/stm32f1xx_it.c **** /******************************************************************************/
  45:Src/stm32f1xx_it.c **** /*            Cortex-M3 Processor Interruption and Exception Handlers         */ 
  46:Src/stm32f1xx_it.c **** /******************************************************************************/
  47:Src/stm32f1xx_it.c **** 
  48:Src/stm32f1xx_it.c **** /**
  49:Src/stm32f1xx_it.c **** * @brief This function handles Non maskable interrupt.
  50:Src/stm32f1xx_it.c **** */
  51:Src/stm32f1xx_it.c **** void NMI_Handler(void)
  52:Src/stm32f1xx_it.c **** {
  27              		.loc 1 52 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  53:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  54:Src/stm32f1xx_it.c **** 
  55:Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  56:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  57:Src/stm32f1xx_it.c **** 
  58:Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  59:Src/stm32f1xx_it.c **** }
  32              		.loc 1 59 1 view .LVU1
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE66:
  37              		.section	.text.HardFault_Handler,"ax",%progbits
  38              		.align	1
  39              		.global	HardFault_Handler
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu softvfp
  45              	HardFault_Handler:
  46              	.LFB67:
  60:Src/stm32f1xx_it.c **** 
  61:Src/stm32f1xx_it.c **** /**
  62:Src/stm32f1xx_it.c **** * @brief This function handles Hard fault interrupt.
  63:Src/stm32f1xx_it.c **** */
  64:Src/stm32f1xx_it.c **** void HardFault_Handler(void)
  65:Src/stm32f1xx_it.c **** {
  47              		.loc 1 65 1 view -0
  48              		.cfi_startproc
  49              		@ Volatile: function does not return.
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
ARM GAS  /tmp/cc4oIYdc.s 			page 3


  53              	.L3:
  66:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  67:Src/stm32f1xx_it.c **** 
  68:Src/stm32f1xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  69:Src/stm32f1xx_it.c ****   while (1)
  54              		.loc 1 69 3 discriminator 1 view .LVU3
  70:Src/stm32f1xx_it.c ****   {
  71:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  72:Src/stm32f1xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  73:Src/stm32f1xx_it.c ****   }
  55              		.loc 1 73 3 discriminator 1 view .LVU4
  56 0000 FEE7     		b	.L3
  57              		.cfi_endproc
  58              	.LFE67:
  60              		.section	.text.MemManage_Handler,"ax",%progbits
  61              		.align	1
  62              		.global	MemManage_Handler
  63              		.syntax unified
  64              		.thumb
  65              		.thumb_func
  66              		.fpu softvfp
  68              	MemManage_Handler:
  69              	.LFB68:
  74:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 1 */
  75:Src/stm32f1xx_it.c **** 
  76:Src/stm32f1xx_it.c ****   /* USER CODE END HardFault_IRQn 1 */
  77:Src/stm32f1xx_it.c **** }
  78:Src/stm32f1xx_it.c **** 
  79:Src/stm32f1xx_it.c **** /**
  80:Src/stm32f1xx_it.c **** * @brief This function handles Memory management fault.
  81:Src/stm32f1xx_it.c **** */
  82:Src/stm32f1xx_it.c **** void MemManage_Handler(void)
  83:Src/stm32f1xx_it.c **** {
  70              		.loc 1 83 1 view -0
  71              		.cfi_startproc
  72              		@ Volatile: function does not return.
  73              		@ args = 0, pretend = 0, frame = 0
  74              		@ frame_needed = 0, uses_anonymous_args = 0
  75              		@ link register save eliminated.
  76              	.L5:
  84:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
  85:Src/stm32f1xx_it.c **** 
  86:Src/stm32f1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
  87:Src/stm32f1xx_it.c ****   while (1)
  77              		.loc 1 87 3 discriminator 1 view .LVU6
  88:Src/stm32f1xx_it.c ****   {
  89:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
  90:Src/stm32f1xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
  91:Src/stm32f1xx_it.c ****   }
  78              		.loc 1 91 3 discriminator 1 view .LVU7
  79 0000 FEE7     		b	.L5
  80              		.cfi_endproc
  81              	.LFE68:
  83              		.section	.text.BusFault_Handler,"ax",%progbits
  84              		.align	1
  85              		.global	BusFault_Handler
  86              		.syntax unified
ARM GAS  /tmp/cc4oIYdc.s 			page 4


  87              		.thumb
  88              		.thumb_func
  89              		.fpu softvfp
  91              	BusFault_Handler:
  92              	.LFB69:
  92:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 1 */
  93:Src/stm32f1xx_it.c **** 
  94:Src/stm32f1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 1 */
  95:Src/stm32f1xx_it.c **** }
  96:Src/stm32f1xx_it.c **** 
  97:Src/stm32f1xx_it.c **** /**
  98:Src/stm32f1xx_it.c **** * @brief This function handles Prefetch fault, memory access fault.
  99:Src/stm32f1xx_it.c **** */
 100:Src/stm32f1xx_it.c **** void BusFault_Handler(void)
 101:Src/stm32f1xx_it.c **** {
  93              		.loc 1 101 1 view -0
  94              		.cfi_startproc
  95              		@ Volatile: function does not return.
  96              		@ args = 0, pretend = 0, frame = 0
  97              		@ frame_needed = 0, uses_anonymous_args = 0
  98              		@ link register save eliminated.
  99              	.L7:
 102:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 103:Src/stm32f1xx_it.c **** 
 104:Src/stm32f1xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 105:Src/stm32f1xx_it.c ****   while (1)
 100              		.loc 1 105 3 discriminator 1 view .LVU9
 106:Src/stm32f1xx_it.c ****   {
 107:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 108:Src/stm32f1xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 109:Src/stm32f1xx_it.c ****   }
 101              		.loc 1 109 3 discriminator 1 view .LVU10
 102 0000 FEE7     		b	.L7
 103              		.cfi_endproc
 104              	.LFE69:
 106              		.section	.text.UsageFault_Handler,"ax",%progbits
 107              		.align	1
 108              		.global	UsageFault_Handler
 109              		.syntax unified
 110              		.thumb
 111              		.thumb_func
 112              		.fpu softvfp
 114              	UsageFault_Handler:
 115              	.LFB70:
 110:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 1 */
 111:Src/stm32f1xx_it.c **** 
 112:Src/stm32f1xx_it.c ****   /* USER CODE END BusFault_IRQn 1 */
 113:Src/stm32f1xx_it.c **** }
 114:Src/stm32f1xx_it.c **** 
 115:Src/stm32f1xx_it.c **** /**
 116:Src/stm32f1xx_it.c **** * @brief This function handles Undefined instruction or illegal state.
 117:Src/stm32f1xx_it.c **** */
 118:Src/stm32f1xx_it.c **** void UsageFault_Handler(void)
 119:Src/stm32f1xx_it.c **** {
 116              		.loc 1 119 1 view -0
 117              		.cfi_startproc
 118              		@ Volatile: function does not return.
ARM GAS  /tmp/cc4oIYdc.s 			page 5


 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121              		@ link register save eliminated.
 122              	.L9:
 120:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 121:Src/stm32f1xx_it.c **** 
 122:Src/stm32f1xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 123:Src/stm32f1xx_it.c ****   while (1)
 123              		.loc 1 123 3 discriminator 1 view .LVU12
 124:Src/stm32f1xx_it.c ****   {
 125:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 126:Src/stm32f1xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 127:Src/stm32f1xx_it.c ****   }
 124              		.loc 1 127 3 discriminator 1 view .LVU13
 125 0000 FEE7     		b	.L9
 126              		.cfi_endproc
 127              	.LFE70:
 129              		.section	.text.SVC_Handler,"ax",%progbits
 130              		.align	1
 131              		.global	SVC_Handler
 132              		.syntax unified
 133              		.thumb
 134              		.thumb_func
 135              		.fpu softvfp
 137              	SVC_Handler:
 138              	.LFB71:
 128:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 1 */
 129:Src/stm32f1xx_it.c **** 
 130:Src/stm32f1xx_it.c ****   /* USER CODE END UsageFault_IRQn 1 */
 131:Src/stm32f1xx_it.c **** }
 132:Src/stm32f1xx_it.c **** 
 133:Src/stm32f1xx_it.c **** /**
 134:Src/stm32f1xx_it.c **** * @brief This function handles System service call via SWI instruction.
 135:Src/stm32f1xx_it.c **** */
 136:Src/stm32f1xx_it.c **** void SVC_Handler(void)
 137:Src/stm32f1xx_it.c **** {
 139              		.loc 1 137 1 view -0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143              		@ link register save eliminated.
 138:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 139:Src/stm32f1xx_it.c **** 
 140:Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 141:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 142:Src/stm32f1xx_it.c **** 
 143:Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 144:Src/stm32f1xx_it.c **** }
 144              		.loc 1 144 1 view .LVU15
 145 0000 7047     		bx	lr
 146              		.cfi_endproc
 147              	.LFE71:
 149              		.section	.text.DebugMon_Handler,"ax",%progbits
 150              		.align	1
 151              		.global	DebugMon_Handler
 152              		.syntax unified
 153              		.thumb
ARM GAS  /tmp/cc4oIYdc.s 			page 6


 154              		.thumb_func
 155              		.fpu softvfp
 157              	DebugMon_Handler:
 158              	.LFB72:
 145:Src/stm32f1xx_it.c **** 
 146:Src/stm32f1xx_it.c **** /**
 147:Src/stm32f1xx_it.c **** * @brief This function handles Debug monitor.
 148:Src/stm32f1xx_it.c **** */
 149:Src/stm32f1xx_it.c **** void DebugMon_Handler(void)
 150:Src/stm32f1xx_it.c **** {
 159              		.loc 1 150 1 view -0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              		@ link register save eliminated.
 151:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 152:Src/stm32f1xx_it.c **** 
 153:Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 154:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 155:Src/stm32f1xx_it.c **** 
 156:Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 157:Src/stm32f1xx_it.c **** }
 164              		.loc 1 157 1 view .LVU17
 165 0000 7047     		bx	lr
 166              		.cfi_endproc
 167              	.LFE72:
 169              		.section	.text.PendSV_Handler,"ax",%progbits
 170              		.align	1
 171              		.global	PendSV_Handler
 172              		.syntax unified
 173              		.thumb
 174              		.thumb_func
 175              		.fpu softvfp
 177              	PendSV_Handler:
 178              	.LFB73:
 158:Src/stm32f1xx_it.c **** 
 159:Src/stm32f1xx_it.c **** /**
 160:Src/stm32f1xx_it.c **** * @brief This function handles Pendable request for system service.
 161:Src/stm32f1xx_it.c **** */
 162:Src/stm32f1xx_it.c **** void PendSV_Handler(void)
 163:Src/stm32f1xx_it.c **** {
 179              		.loc 1 163 1 view -0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
 164:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 165:Src/stm32f1xx_it.c **** 
 166:Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 167:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 168:Src/stm32f1xx_it.c **** 
 169:Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 170:Src/stm32f1xx_it.c **** }
 184              		.loc 1 170 1 view .LVU19
 185 0000 7047     		bx	lr
 186              		.cfi_endproc
 187              	.LFE73:
ARM GAS  /tmp/cc4oIYdc.s 			page 7


 189              		.section	.text.SysTick_Handler,"ax",%progbits
 190              		.align	1
 191              		.global	SysTick_Handler
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 195              		.fpu softvfp
 197              	SysTick_Handler:
 198              	.LFB74:
 171:Src/stm32f1xx_it.c **** 
 172:Src/stm32f1xx_it.c **** /**
 173:Src/stm32f1xx_it.c **** * @brief This function handles System tick timer.
 174:Src/stm32f1xx_it.c **** */
 175:Src/stm32f1xx_it.c **** void SysTick_Handler(void)
 176:Src/stm32f1xx_it.c **** {
 199              		.loc 1 176 1 view -0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203 0000 08B5     		push	{r3, lr}
 204              	.LCFI0:
 205              		.cfi_def_cfa_offset 8
 206              		.cfi_offset 3, -8
 207              		.cfi_offset 14, -4
 177:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 178:Src/stm32f1xx_it.c **** 
 179:Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 180:Src/stm32f1xx_it.c ****   HAL_IncTick();
 208              		.loc 1 180 3 view .LVU21
 209 0002 FFF7FEFF 		bl	HAL_IncTick
 210              	.LVL0:
 181:Src/stm32f1xx_it.c ****   HAL_SYSTICK_IRQHandler();
 211              		.loc 1 181 3 view .LVU22
 212 0006 FFF7FEFF 		bl	HAL_SYSTICK_IRQHandler
 213              	.LVL1:
 182:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 183:Src/stm32f1xx_it.c **** 
 184:Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 185:Src/stm32f1xx_it.c **** }
 214              		.loc 1 185 1 is_stmt 0 view .LVU23
 215 000a 08BD     		pop	{r3, pc}
 216              		.cfi_endproc
 217              	.LFE74:
 219              		.text
 220              	.Letext0:
 221              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 222              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 223              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 224              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 225              		.file 6 "/usr/arm-none-eabi/include/sys/lock.h"
 226              		.file 7 "/usr/arm-none-eabi/include/sys/_types.h"
 227              		.file 8 "/usr/lib/gcc/arm-none-eabi/8.2.0/include/stddef.h"
 228              		.file 9 "/usr/arm-none-eabi/include/sys/reent.h"
 229              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 230              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
ARM GAS  /tmp/cc4oIYdc.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_it.c
     /tmp/cc4oIYdc.s:16     .text.NMI_Handler:0000000000000000 $t
     /tmp/cc4oIYdc.s:24     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/cc4oIYdc.s:38     .text.HardFault_Handler:0000000000000000 $t
     /tmp/cc4oIYdc.s:45     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/cc4oIYdc.s:61     .text.MemManage_Handler:0000000000000000 $t
     /tmp/cc4oIYdc.s:68     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/cc4oIYdc.s:84     .text.BusFault_Handler:0000000000000000 $t
     /tmp/cc4oIYdc.s:91     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/cc4oIYdc.s:107    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/cc4oIYdc.s:114    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/cc4oIYdc.s:130    .text.SVC_Handler:0000000000000000 $t
     /tmp/cc4oIYdc.s:137    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/cc4oIYdc.s:150    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/cc4oIYdc.s:157    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/cc4oIYdc.s:170    .text.PendSV_Handler:0000000000000000 $t
     /tmp/cc4oIYdc.s:177    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/cc4oIYdc.s:190    .text.SysTick_Handler:0000000000000000 $t
     /tmp/cc4oIYdc.s:197    .text.SysTick_Handler:0000000000000000 SysTick_Handler

UNDEFINED SYMBOLS
HAL_IncTick
HAL_SYSTICK_IRQHandler
