ARM GAS  /tmp/ccfXXTpo.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"lib_lcd.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.getState,"ax",%progbits
  16              		.align	1
  17              		.global	getState
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	getState:
  25              	.LVL0:
  26              	.LFB68:
  27              		.file 1 "Src/lib_lcd.c"
   1:Src/lib_lcd.c **** #include "lib_lcd.h"
   2:Src/lib_lcd.c **** 
   3:Src/lib_lcd.c **** #define CLEAR_DISPLAY 0x01
   4:Src/lib_lcd.c **** #define LCD_16X2
   5:Src/lib_lcd.c **** #define LCD_16X1
   6:Src/lib_lcd.c **** /**
   7:Src/lib_lcd.c ****  *  to do :
   8:Src/lib_lcd.c ****  *  bikin method untuk parsing string
   9:Src/lib_lcd.c ****  *
  10:Src/lib_lcd.c ****  * */
  11:Src/lib_lcd.c **** 
  12:Src/lib_lcd.c **** /**
  13:Src/lib_lcd.c ****  *  Mengirim Instruksi ke LCD
  14:Src/lib_lcd.c ****  * @param instruct [kode instruksi register]
  15:Src/lib_lcd.c ****  * @param this     [LCD_DRIVER Struct]
  16:Src/lib_lcd.c ****  *
  17:Src/lib_lcd.c **** 
  18:Src/lib_lcd.c ****  */
  19:Src/lib_lcd.c **** 
  20:Src/lib_lcd.c **** void sendInstruction(uint16_t instruct, LCD_DRIVER *this) {
  21:Src/lib_lcd.c ****         HAL_Delay(50);
  22:Src/lib_lcd.c ****         turnOn(&this->enPin);
  23:Src/lib_lcd.c **** 
  24:Src/lib_lcd.c ****         splitBit(instruct, this);
  25:Src/lib_lcd.c **** 
  26:Src/lib_lcd.c ****         turnOff(&this->enPin);
  27:Src/lib_lcd.c ****         HAL_Delay(50);
  28:Src/lib_lcd.c **** }
  29:Src/lib_lcd.c **** 
  30:Src/lib_lcd.c **** /**
  31:Src/lib_lcd.c ****  * Menampilkan output ke LCD
ARM GAS  /tmp/ccfXXTpo.s 			page 2


  32:Src/lib_lcd.c ****  * @param string [alphanumeric bisa berupa string maupun karakter]
  33:Src/lib_lcd.c ****  * @param this   [object LCD_DRIVER]
  34:Src/lib_lcd.c ****  */
  35:Src/lib_lcd.c **** void sendcharTolcd(const char *string, LCD_DRIVER *this) {
  36:Src/lib_lcd.c ****         turnOn(&this->enPin);
  37:Src/lib_lcd.c ****         turnOn(&this->rsPin);
  38:Src/lib_lcd.c ****         turnOff(&this->rwPin);
  39:Src/lib_lcd.c ****         while (*string != '\0') {
  40:Src/lib_lcd.c ****                 splitBit((uint8_t)*string, this);
  41:Src/lib_lcd.c ****                 string++;
  42:Src/lib_lcd.c ****         }
  43:Src/lib_lcd.c ****         turnOff(&this->enPin);
  44:Src/lib_lcd.c ****         turnOff(&this->rsPin);
  45:Src/lib_lcd.c **** }
  46:Src/lib_lcd.c **** 
  47:Src/lib_lcd.c **** GPIO_PinState getState(uint8_t data, uint8_t bit) {
  28              		.loc 1 47 51 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  48:Src/lib_lcd.c **** 
  49:Src/lib_lcd.c ****         if (data & bit) {
  33              		.loc 1 49 9 view .LVU1
  34              		.loc 1 49 12 is_stmt 0 view .LVU2
  35 0000 0840     		ands	r0, r0, r1
  36              	.LVL1:
  37              		.loc 1 49 12 view .LVU3
  38 0002 00D0     		beq	.L2
  50:Src/lib_lcd.c ****                 return GPIO_PIN_SET;
  39              		.loc 1 50 24 view .LVU4
  40 0004 0120     		movs	r0, #1
  41              	.L2:
  51:Src/lib_lcd.c ****         } else {
  52:Src/lib_lcd.c ****                 return GPIO_PIN_RESET;
  53:Src/lib_lcd.c ****         }
  54:Src/lib_lcd.c **** }
  42              		.loc 1 54 1 view .LVU5
  43 0006 7047     		bx	lr
  44              		.cfi_endproc
  45              	.LFE68:
  47              		.section	.text.splitBit,"ax",%progbits
  48              		.align	1
  49              		.global	splitBit
  50              		.syntax unified
  51              		.thumb
  52              		.thumb_func
  53              		.fpu softvfp
  55              	splitBit:
  56              	.LVL2:
  57              	.LFB69:
  55:Src/lib_lcd.c **** 
  56:Src/lib_lcd.c **** /**
  57:Src/lib_lcd.c ****  * split Byte into bit per GPIO
  58:Src/lib_lcd.c ****  * @param byte [the data that want to be splited]
  59:Src/lib_lcd.c ****  * @param this [LCD_DRIVER Object]
  60:Src/lib_lcd.c ****  */
ARM GAS  /tmp/ccfXXTpo.s 			page 3


  61:Src/lib_lcd.c **** void splitBit(uint8_t byte, LCD_DRIVER *this) {
  58              		.loc 1 61 47 is_stmt 1 view -0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		.loc 1 61 47 is_stmt 0 view .LVU7
  63 0000 38B5     		push	{r3, r4, r5, lr}
  64              	.LCFI0:
  65              		.cfi_def_cfa_offset 16
  66              		.cfi_offset 3, -16
  67              		.cfi_offset 4, -12
  68              		.cfi_offset 5, -8
  69              		.cfi_offset 14, -4
  70 0002 0546     		mov	r5, r0
  71 0004 0C46     		mov	r4, r1
  62:Src/lib_lcd.c ****         HAL_Delay(50);
  72              		.loc 1 62 9 is_stmt 1 view .LVU8
  73 0006 3220     		movs	r0, #50
  74              	.LVL3:
  75              		.loc 1 62 9 is_stmt 0 view .LVU9
  76 0008 FFF7FEFF 		bl	HAL_Delay
  77              	.LVL4:
  63:Src/lib_lcd.c **** 
  64:Src/lib_lcd.c ****         HAL_GPIO_WritePin(this->BIT0.GPIOSEKTOR, this->BIT0.PIN,
  78              		.loc 1 64 9 is_stmt 1 view .LVU10
  79 000c 0121     		movs	r1, #1
  80 000e 2846     		mov	r0, r5
  81 0010 FFF7FEFF 		bl	getState
  82              	.LVL5:
  83 0014 0246     		mov	r2, r0
  84 0016 A18B     		ldrh	r1, [r4, #28]
  85 0018 A069     		ldr	r0, [r4, #24]
  86 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
  87              	.LVL6:
  65:Src/lib_lcd.c ****                           getState(byte, 0x01));
  66:Src/lib_lcd.c **** 
  67:Src/lib_lcd.c ****         HAL_GPIO_WritePin(this->BIT1.GPIOSEKTOR, this->BIT1.PIN,
  88              		.loc 1 67 9 view .LVU11
  89 001e 0221     		movs	r1, #2
  90 0020 2846     		mov	r0, r5
  91 0022 FFF7FEFF 		bl	getState
  92              	.LVL7:
  93 0026 0246     		mov	r2, r0
  94 0028 A18C     		ldrh	r1, [r4, #36]
  95 002a 206A     		ldr	r0, [r4, #32]
  96 002c FFF7FEFF 		bl	HAL_GPIO_WritePin
  97              	.LVL8:
  68:Src/lib_lcd.c ****                           getState(byte, 0x02));
  69:Src/lib_lcd.c **** 
  70:Src/lib_lcd.c ****         HAL_GPIO_WritePin(this->BIT2.GPIOSEKTOR, this->BIT2.PIN,
  98              		.loc 1 70 9 view .LVU12
  99 0030 0421     		movs	r1, #4
 100 0032 2846     		mov	r0, r5
 101 0034 FFF7FEFF 		bl	getState
 102              	.LVL9:
 103 0038 0246     		mov	r2, r0
 104 003a A18D     		ldrh	r1, [r4, #44]
ARM GAS  /tmp/ccfXXTpo.s 			page 4


 105 003c A06A     		ldr	r0, [r4, #40]
 106 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
 107              	.LVL10:
  71:Src/lib_lcd.c ****                           getState(byte, 0x04));
  72:Src/lib_lcd.c **** 
  73:Src/lib_lcd.c ****         HAL_GPIO_WritePin(this->BIT3.GPIOSEKTOR, this->BIT3.PIN,
 108              		.loc 1 73 9 view .LVU13
 109 0042 0821     		movs	r1, #8
 110 0044 2846     		mov	r0, r5
 111 0046 FFF7FEFF 		bl	getState
 112              	.LVL11:
 113 004a 0246     		mov	r2, r0
 114 004c A18E     		ldrh	r1, [r4, #52]
 115 004e 206B     		ldr	r0, [r4, #48]
 116 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
 117              	.LVL12:
  74:Src/lib_lcd.c ****                           getState(byte, 0x08));
  75:Src/lib_lcd.c ****         HAL_GPIO_WritePin(this->BIT4.GPIOSEKTOR, this->BIT4.PIN,
 118              		.loc 1 75 9 view .LVU14
 119 0054 1021     		movs	r1, #16
 120 0056 2846     		mov	r0, r5
 121 0058 FFF7FEFF 		bl	getState
 122              	.LVL13:
 123 005c 0246     		mov	r2, r0
 124 005e A18F     		ldrh	r1, [r4, #60]
 125 0060 A06B     		ldr	r0, [r4, #56]
 126 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 127              	.LVL14:
  76:Src/lib_lcd.c ****                           getState(byte, 0x10));
  77:Src/lib_lcd.c **** 
  78:Src/lib_lcd.c ****         HAL_GPIO_WritePin(this->BIT5.GPIOSEKTOR, this->BIT5.PIN,
 128              		.loc 1 78 9 view .LVU15
 129 0066 2021     		movs	r1, #32
 130 0068 2846     		mov	r0, r5
 131 006a FFF7FEFF 		bl	getState
 132              	.LVL15:
 133 006e 0246     		mov	r2, r0
 134 0070 B4F84410 		ldrh	r1, [r4, #68]
 135 0074 206C     		ldr	r0, [r4, #64]
 136 0076 FFF7FEFF 		bl	HAL_GPIO_WritePin
 137              	.LVL16:
  79:Src/lib_lcd.c ****                           getState(byte, 0x20));
  80:Src/lib_lcd.c **** 
  81:Src/lib_lcd.c ****         HAL_GPIO_WritePin(this->BIT6.GPIOSEKTOR, this->BIT6.PIN,
 138              		.loc 1 81 9 view .LVU16
 139 007a 4021     		movs	r1, #64
 140 007c 2846     		mov	r0, r5
 141 007e FFF7FEFF 		bl	getState
 142              	.LVL17:
 143 0082 0246     		mov	r2, r0
 144 0084 B4F84C10 		ldrh	r1, [r4, #76]
 145 0088 A06C     		ldr	r0, [r4, #72]
 146 008a FFF7FEFF 		bl	HAL_GPIO_WritePin
 147              	.LVL18:
  82:Src/lib_lcd.c ****                           getState(byte, 0x40));
  83:Src/lib_lcd.c **** 
  84:Src/lib_lcd.c ****         HAL_GPIO_WritePin(this->BIT7.GPIOSEKTOR, this->BIT7.PIN,
ARM GAS  /tmp/ccfXXTpo.s 			page 5


 148              		.loc 1 84 9 view .LVU17
 149 008e 8021     		movs	r1, #128
 150 0090 2846     		mov	r0, r5
 151 0092 FFF7FEFF 		bl	getState
 152              	.LVL19:
 153 0096 0246     		mov	r2, r0
 154 0098 B4F85410 		ldrh	r1, [r4, #84]
 155 009c 206D     		ldr	r0, [r4, #80]
 156 009e FFF7FEFF 		bl	HAL_GPIO_WritePin
 157              	.LVL20:
  85:Src/lib_lcd.c ****                           getState(byte, 0x80));
  86:Src/lib_lcd.c **** 
  87:Src/lib_lcd.c ****         HAL_Delay(50);
 158              		.loc 1 87 9 view .LVU18
 159 00a2 3220     		movs	r0, #50
 160 00a4 FFF7FEFF 		bl	HAL_Delay
 161              	.LVL21:
  88:Src/lib_lcd.c **** }
 162              		.loc 1 88 1 is_stmt 0 view .LVU19
 163 00a8 38BD     		pop	{r3, r4, r5, pc}
 164              		.loc 1 88 1 view .LVU20
 165              		.cfi_endproc
 166              	.LFE69:
 168              		.section	.text.turnOn,"ax",%progbits
 169              		.align	1
 170              		.global	turnOn
 171              		.syntax unified
 172              		.thumb
 173              		.thumb_func
 174              		.fpu softvfp
 176              	turnOn:
 177              	.LVL22:
 178              	.LFB70:
  89:Src/lib_lcd.c **** 
  90:Src/lib_lcd.c **** /**
  91:Src/lib_lcd.c ****  *
  92:Src/lib_lcd.c ****  * Set value satu pin I/O
  93:Src/lib_lcd.c ****  * @param this [LCD_DRIVER object,di spesifikkan ke Pin I/O ]
  94:Src/lib_lcd.c ****  *
  95:Src/lib_lcd.c ****  */
  96:Src/lib_lcd.c **** void turnOn(PIN_PERIPHERAL *this) {
 179              		.loc 1 96 35 is_stmt 1 view -0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		.loc 1 96 35 is_stmt 0 view .LVU22
 184 0000 08B5     		push	{r3, lr}
 185              	.LCFI1:
 186              		.cfi_def_cfa_offset 8
 187              		.cfi_offset 3, -8
 188              		.cfi_offset 14, -4
  97:Src/lib_lcd.c ****         HAL_GPIO_WritePin(this->GPIOSEKTOR, this->PIN, GPIO_PIN_SET);
 189              		.loc 1 97 9 is_stmt 1 view .LVU23
 190 0002 0122     		movs	r2, #1
 191 0004 8188     		ldrh	r1, [r0, #4]
 192 0006 0068     		ldr	r0, [r0]
 193              	.LVL23:
ARM GAS  /tmp/ccfXXTpo.s 			page 6


 194              		.loc 1 97 9 is_stmt 0 view .LVU24
 195 0008 FFF7FEFF 		bl	HAL_GPIO_WritePin
 196              	.LVL24:
  98:Src/lib_lcd.c ****         HAL_Delay(50);
 197              		.loc 1 98 9 is_stmt 1 view .LVU25
 198 000c 3220     		movs	r0, #50
 199 000e FFF7FEFF 		bl	HAL_Delay
 200              	.LVL25:
  99:Src/lib_lcd.c **** }
 201              		.loc 1 99 1 is_stmt 0 view .LVU26
 202 0012 08BD     		pop	{r3, pc}
 203              		.cfi_endproc
 204              	.LFE70:
 206              		.section	.text.turnOff,"ax",%progbits
 207              		.align	1
 208              		.global	turnOff
 209              		.syntax unified
 210              		.thumb
 211              		.thumb_func
 212              		.fpu softvfp
 214              	turnOff:
 215              	.LVL26:
 216              	.LFB71:
 100:Src/lib_lcd.c **** 
 101:Src/lib_lcd.c **** /**
 102:Src/lib_lcd.c ****  *
 103:Src/lib_lcd.c ****  * [Reset value satu pin I/O]
 104:Src/lib_lcd.c ****  * @param this [LCD_DRIVER object,di spesifikkan ke Pin I/O]
 105:Src/lib_lcd.c ****  *
 106:Src/lib_lcd.c ****  */
 107:Src/lib_lcd.c **** void turnOff(PIN_PERIPHERAL *this) {
 217              		.loc 1 107 36 is_stmt 1 view -0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 0
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221              		.loc 1 107 36 is_stmt 0 view .LVU28
 222 0000 08B5     		push	{r3, lr}
 223              	.LCFI2:
 224              		.cfi_def_cfa_offset 8
 225              		.cfi_offset 3, -8
 226              		.cfi_offset 14, -4
 108:Src/lib_lcd.c ****         HAL_GPIO_WritePin(this->GPIOSEKTOR, this->PIN, GPIO_PIN_RESET);
 227              		.loc 1 108 9 is_stmt 1 view .LVU29
 228 0002 0022     		movs	r2, #0
 229 0004 8188     		ldrh	r1, [r0, #4]
 230 0006 0068     		ldr	r0, [r0]
 231              	.LVL27:
 232              		.loc 1 108 9 is_stmt 0 view .LVU30
 233 0008 FFF7FEFF 		bl	HAL_GPIO_WritePin
 234              	.LVL28:
 109:Src/lib_lcd.c ****         HAL_Delay(50);
 235              		.loc 1 109 9 is_stmt 1 view .LVU31
 236 000c 3220     		movs	r0, #50
 237 000e FFF7FEFF 		bl	HAL_Delay
 238              	.LVL29:
 110:Src/lib_lcd.c **** }
 239              		.loc 1 110 1 is_stmt 0 view .LVU32
ARM GAS  /tmp/ccfXXTpo.s 			page 7


 240 0012 08BD     		pop	{r3, pc}
 241              		.cfi_endproc
 242              	.LFE71:
 244              		.section	.text.sendInstruction,"ax",%progbits
 245              		.align	1
 246              		.global	sendInstruction
 247              		.syntax unified
 248              		.thumb
 249              		.thumb_func
 250              		.fpu softvfp
 252              	sendInstruction:
 253              	.LVL30:
 254              	.LFB66:
  20:Src/lib_lcd.c ****         HAL_Delay(50);
 255              		.loc 1 20 59 is_stmt 1 view -0
 256              		.cfi_startproc
 257              		@ args = 0, pretend = 0, frame = 0
 258              		@ frame_needed = 0, uses_anonymous_args = 0
  20:Src/lib_lcd.c ****         HAL_Delay(50);
 259              		.loc 1 20 59 is_stmt 0 view .LVU34
 260 0000 38B5     		push	{r3, r4, r5, lr}
 261              	.LCFI3:
 262              		.cfi_def_cfa_offset 16
 263              		.cfi_offset 3, -16
 264              		.cfi_offset 4, -12
 265              		.cfi_offset 5, -8
 266              		.cfi_offset 14, -4
 267 0002 0546     		mov	r5, r0
 268 0004 0C46     		mov	r4, r1
  21:Src/lib_lcd.c ****         turnOn(&this->enPin);
 269              		.loc 1 21 9 is_stmt 1 view .LVU35
 270 0006 3220     		movs	r0, #50
 271              	.LVL31:
  21:Src/lib_lcd.c ****         turnOn(&this->enPin);
 272              		.loc 1 21 9 is_stmt 0 view .LVU36
 273 0008 FFF7FEFF 		bl	HAL_Delay
 274              	.LVL32:
  22:Src/lib_lcd.c **** 
 275              		.loc 1 22 9 is_stmt 1 view .LVU37
 276 000c 2046     		mov	r0, r4
 277 000e FFF7FEFF 		bl	turnOn
 278              	.LVL33:
  24:Src/lib_lcd.c **** 
 279              		.loc 1 24 9 view .LVU38
 280 0012 2146     		mov	r1, r4
 281 0014 E8B2     		uxtb	r0, r5
 282 0016 FFF7FEFF 		bl	splitBit
 283              	.LVL34:
  26:Src/lib_lcd.c ****         HAL_Delay(50);
 284              		.loc 1 26 9 view .LVU39
 285 001a 2046     		mov	r0, r4
 286 001c FFF7FEFF 		bl	turnOff
 287              	.LVL35:
  27:Src/lib_lcd.c **** }
 288              		.loc 1 27 9 view .LVU40
 289 0020 3220     		movs	r0, #50
 290 0022 FFF7FEFF 		bl	HAL_Delay
ARM GAS  /tmp/ccfXXTpo.s 			page 8


 291              	.LVL36:
  28:Src/lib_lcd.c **** 
 292              		.loc 1 28 1 is_stmt 0 view .LVU41
 293 0026 38BD     		pop	{r3, r4, r5, pc}
  28:Src/lib_lcd.c **** 
 294              		.loc 1 28 1 view .LVU42
 295              		.cfi_endproc
 296              	.LFE66:
 298              		.section	.text.sendcharTolcd,"ax",%progbits
 299              		.align	1
 300              		.global	sendcharTolcd
 301              		.syntax unified
 302              		.thumb
 303              		.thumb_func
 304              		.fpu softvfp
 306              	sendcharTolcd:
 307              	.LVL37:
 308              	.LFB67:
  35:Src/lib_lcd.c ****         turnOn(&this->enPin);
 309              		.loc 1 35 58 is_stmt 1 view -0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 0
 312              		@ frame_needed = 0, uses_anonymous_args = 0
  35:Src/lib_lcd.c ****         turnOn(&this->enPin);
 313              		.loc 1 35 58 is_stmt 0 view .LVU44
 314 0000 70B5     		push	{r4, r5, r6, lr}
 315              	.LCFI4:
 316              		.cfi_def_cfa_offset 16
 317              		.cfi_offset 4, -16
 318              		.cfi_offset 5, -12
 319              		.cfi_offset 6, -8
 320              		.cfi_offset 14, -4
 321 0002 0446     		mov	r4, r0
 322 0004 0D46     		mov	r5, r1
  36:Src/lib_lcd.c ****         turnOn(&this->rsPin);
 323              		.loc 1 36 9 is_stmt 1 view .LVU45
 324 0006 0846     		mov	r0, r1
 325              	.LVL38:
  36:Src/lib_lcd.c ****         turnOn(&this->rsPin);
 326              		.loc 1 36 9 is_stmt 0 view .LVU46
 327 0008 FFF7FEFF 		bl	turnOn
 328              	.LVL39:
  37:Src/lib_lcd.c ****         turnOff(&this->rwPin);
 329              		.loc 1 37 9 is_stmt 1 view .LVU47
 330 000c 05F10806 		add	r6, r5, #8
 331 0010 3046     		mov	r0, r6
 332 0012 FFF7FEFF 		bl	turnOn
 333              	.LVL40:
  38:Src/lib_lcd.c ****         while (*string != '\0') {
 334              		.loc 1 38 9 view .LVU48
 335 0016 05F11000 		add	r0, r5, #16
 336 001a FFF7FEFF 		bl	turnOff
 337              	.LVL41:
  39:Src/lib_lcd.c ****                 splitBit((uint8_t)*string, this);
 338              		.loc 1 39 9 view .LVU49
 339              	.L12:
  39:Src/lib_lcd.c ****                 splitBit((uint8_t)*string, this);
ARM GAS  /tmp/ccfXXTpo.s 			page 9


 340              		.loc 1 39 16 is_stmt 0 view .LVU50
 341 001e 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
  39:Src/lib_lcd.c ****                 splitBit((uint8_t)*string, this);
 342              		.loc 1 39 15 view .LVU51
 343 0020 20B1     		cbz	r0, .L15
  40:Src/lib_lcd.c ****                 string++;
 344              		.loc 1 40 17 is_stmt 1 view .LVU52
 345 0022 2946     		mov	r1, r5
 346 0024 FFF7FEFF 		bl	splitBit
 347              	.LVL42:
  41:Src/lib_lcd.c ****         }
 348              		.loc 1 41 17 view .LVU53
  41:Src/lib_lcd.c ****         }
 349              		.loc 1 41 23 is_stmt 0 view .LVU54
 350 0028 0134     		adds	r4, r4, #1
 351              	.LVL43:
  41:Src/lib_lcd.c ****         }
 352              		.loc 1 41 23 view .LVU55
 353 002a F8E7     		b	.L12
 354              	.L15:
  43:Src/lib_lcd.c ****         turnOff(&this->rsPin);
 355              		.loc 1 43 9 is_stmt 1 view .LVU56
 356 002c 2846     		mov	r0, r5
 357 002e FFF7FEFF 		bl	turnOff
 358              	.LVL44:
  44:Src/lib_lcd.c **** }
 359              		.loc 1 44 9 view .LVU57
 360 0032 3046     		mov	r0, r6
 361 0034 FFF7FEFF 		bl	turnOff
 362              	.LVL45:
  45:Src/lib_lcd.c **** 
 363              		.loc 1 45 1 is_stmt 0 view .LVU58
 364 0038 70BD     		pop	{r4, r5, r6, pc}
  45:Src/lib_lcd.c **** 
 365              		.loc 1 45 1 view .LVU59
 366              		.cfi_endproc
 367              	.LFE67:
 369              		.section	.text.beginLCD,"ax",%progbits
 370              		.align	1
 371              		.global	beginLCD
 372              		.syntax unified
 373              		.thumb
 374              		.thumb_func
 375              		.fpu softvfp
 377              	beginLCD:
 378              	.LVL46:
 379              	.LFB72:
 111:Src/lib_lcd.c **** 
 112:Src/lib_lcd.c **** void beginLCD(LCD_DRIVER *this) {
 380              		.loc 1 112 33 is_stmt 1 view -0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 0, uses_anonymous_args = 0
 384              		.loc 1 112 33 is_stmt 0 view .LVU61
 385 0000 10B5     		push	{r4, lr}
 386              	.LCFI5:
 387              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccfXXTpo.s 			page 10


 388              		.cfi_offset 4, -8
 389              		.cfi_offset 14, -4
 390 0002 0446     		mov	r4, r0
 113:Src/lib_lcd.c ****         HAL_Delay(100);
 391              		.loc 1 113 9 is_stmt 1 view .LVU62
 392 0004 6420     		movs	r0, #100
 393              	.LVL47:
 394              		.loc 1 113 9 is_stmt 0 view .LVU63
 395 0006 FFF7FEFF 		bl	HAL_Delay
 396              	.LVL48:
 114:Src/lib_lcd.c ****         turnOff(&this->enPin); // set pin Enable high to firing data to LCD
 397              		.loc 1 114 9 is_stmt 1 view .LVU64
 398 000a 2046     		mov	r0, r4
 399 000c FFF7FEFF 		bl	turnOff
 400              	.LVL49:
 115:Src/lib_lcd.c ****         turnOff(&this->rsPin);
 401              		.loc 1 115 9 view .LVU65
 402 0010 04F10800 		add	r0, r4, #8
 403 0014 FFF7FEFF 		bl	turnOff
 404              	.LVL50:
 116:Src/lib_lcd.c ****         turnOff(&this->rwPin);
 405              		.loc 1 116 9 view .LVU66
 406 0018 04F11000 		add	r0, r4, #16
 407 001c FFF7FEFF 		bl	turnOff
 408              	.LVL51:
 117:Src/lib_lcd.c ****         // aktifkan function set, 1 baris saja
 118:Src/lib_lcd.c ****         splitBit(0x30, this);
 409              		.loc 1 118 9 view .LVU67
 410 0020 2146     		mov	r1, r4
 411 0022 3020     		movs	r0, #48
 412 0024 FFF7FEFF 		bl	splitBit
 413              	.LVL52:
 119:Src/lib_lcd.c ****         // enable blink,cursor,dan display
 120:Src/lib_lcd.c ****         splitBit(0x0F, this);
 414              		.loc 1 120 9 view .LVU68
 415 0028 2146     		mov	r1, r4
 416 002a 0F20     		movs	r0, #15
 417 002c FFF7FEFF 		bl	splitBit
 418              	.LVL53:
 121:Src/lib_lcd.c ****         turnOn(&this->enPin);
 419              		.loc 1 121 9 view .LVU69
 420 0030 2046     		mov	r0, r4
 421 0032 FFF7FEFF 		bl	turnOn
 422              	.LVL54:
 122:Src/lib_lcd.c ****         // matikan enable agar data register aktif
 123:Src/lib_lcd.c ****         turnOff(&this->enPin);
 423              		.loc 1 123 9 view .LVU70
 424 0036 2046     		mov	r0, r4
 425 0038 FFF7FEFF 		bl	turnOff
 426              	.LVL55:
 124:Src/lib_lcd.c **** }
 427              		.loc 1 124 1 is_stmt 0 view .LVU71
 428 003c 10BD     		pop	{r4, pc}
 429              		.loc 1 124 1 view .LVU72
 430              		.cfi_endproc
 431              	.LFE72:
 433              		.text
ARM GAS  /tmp/ccfXXTpo.s 			page 11


 434              	.Letext0:
 435              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 436              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 437              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 438              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 439              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 440              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 441              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 442              		.file 9 "/usr/lib/gcc/arm-none-eabi/8.3.0/include/stddef.h"
 443              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
 444              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 445              		.file 12 "Inc/lib_lcd.h"
 446              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /tmp/ccfXXTpo.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 lib_lcd.c
     /tmp/ccfXXTpo.s:16     .text.getState:0000000000000000 $t
     /tmp/ccfXXTpo.s:24     .text.getState:0000000000000000 getState
     /tmp/ccfXXTpo.s:48     .text.splitBit:0000000000000000 $t
     /tmp/ccfXXTpo.s:55     .text.splitBit:0000000000000000 splitBit
     /tmp/ccfXXTpo.s:169    .text.turnOn:0000000000000000 $t
     /tmp/ccfXXTpo.s:176    .text.turnOn:0000000000000000 turnOn
     /tmp/ccfXXTpo.s:207    .text.turnOff:0000000000000000 $t
     /tmp/ccfXXTpo.s:214    .text.turnOff:0000000000000000 turnOff
     /tmp/ccfXXTpo.s:245    .text.sendInstruction:0000000000000000 $t
     /tmp/ccfXXTpo.s:252    .text.sendInstruction:0000000000000000 sendInstruction
     /tmp/ccfXXTpo.s:299    .text.sendcharTolcd:0000000000000000 $t
     /tmp/ccfXXTpo.s:306    .text.sendcharTolcd:0000000000000000 sendcharTolcd
     /tmp/ccfXXTpo.s:370    .text.beginLCD:0000000000000000 $t
     /tmp/ccfXXTpo.s:377    .text.beginLCD:0000000000000000 beginLCD

UNDEFINED SYMBOLS
HAL_Delay
HAL_GPIO_WritePin
