ARM GAS  /tmp/ccEb6N98.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB68:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** 
   2:Src/main.c    **** /**
   3:Src/main.c    ****  ******************************************************************************
   4:Src/main.c    ****  * @file           : main.c
   5:Src/main.c    ****  * @brief          : Main program body
   6:Src/main.c    ****  ******************************************************************************
   7:Src/main.c    ****  ** This notice applies to any and all portions of this file
   8:Src/main.c    ****  * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****  * USER CODE END. Other portions of this file, whether
  10:Src/main.c    ****  * inserted by the user or by software development tools
  11:Src/main.c    ****  * are owned by their respective copyright owners.
  12:Src/main.c    ****  *
  13:Src/main.c    ****  * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/main.c    ****  *
  15:Src/main.c    ****  * Redistribution and use in source and binary forms, with or without
  16:Src/main.c    ****  * modification, are permitted provided that the following conditions are met:
  17:Src/main.c    ****  *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****  *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****  *   2. Redistributions in binary form must reproduce the above copyright
  20:Src/main.c    ****  * notice, this list of conditions and the following disclaimer in the
  21:Src/main.c    ****  * documentation and/or other materials provided with the distribution.
  22:Src/main.c    ****  *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****  *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****  *      without specific prior written permission.
  25:Src/main.c    ****  *
  26:Src/main.c    ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  29:Src/main.c    ****  * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
  30:Src/main.c    ****  * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  31:Src/main.c    ****  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  32:Src/main.c    ****  * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  33:Src/main.c    ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
ARM GAS  /tmp/ccEb6N98.s 			page 2


  34:Src/main.c    ****  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  35:Src/main.c    ****  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:Src/main.c    ****  * POSSIBILITY OF SUCH DAMAGE.
  37:Src/main.c    ****  *
  38:Src/main.c    ****  ******************************************************************************
  39:Src/main.c    ****  */
  40:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  41:Src/main.c    **** #include "main.h"
  42:Src/main.c    **** #include "lib_lcd.h"
  43:Src/main.c    **** #include "stm32f1xx_hal.h"
  44:Src/main.c    **** 
  45:Src/main.c    **** /* USER CODE BEGIN Includes */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* USER CODE END Includes */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  50:Src/main.c    **** 
  51:Src/main.c    **** /* USER CODE BEGIN PV */
  52:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE END PV */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  57:Src/main.c    **** void SystemClock_Config(void);
  58:Src/main.c    **** static void MX_GPIO_Init(void);
  59:Src/main.c    **** // static void blink(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin) {
  60:Src/main.c    **** //   HAL_GPIO_WritePin(GPIOx, GPIO_Pin, GPIO_PIN_SET);
  61:Src/main.c    **** // }
  62:Src/main.c    **** 
  63:Src/main.c    **** /* USER CODE BEGIN PFP */
  64:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  65:Src/main.c    **** 
  66:Src/main.c    **** /* USER CODE END PFP */
  67:Src/main.c    **** 
  68:Src/main.c    **** /* USER CODE BEGIN 0 */
  69:Src/main.c    **** 
  70:Src/main.c    **** /* USER CODE END 0 */
  71:Src/main.c    **** 
  72:Src/main.c    **** /**
  73:Src/main.c    ****  * @brief  The application entry point.
  74:Src/main.c    ****  *
  75:Src/main.c    ****  * @retval None
  76:Src/main.c    ****  */
  77:Src/main.c    **** int main(void) {
  78:Src/main.c    ****         /* USER CODE BEGIN 1 */
  79:Src/main.c    **** 
  80:Src/main.c    ****         /* USER CODE END 1 */
  81:Src/main.c    **** 
  82:Src/main.c    ****         /* MCU
  83:Src/main.c    ****          * Configuration----------------------------------------------------------*/
  84:Src/main.c    **** 
  85:Src/main.c    ****         /* Reset of all peripherals, Initializes the Flash interface and the Systick.
  86:Src/main.c    ****          */
  87:Src/main.c    ****         HAL_Init();
  88:Src/main.c    **** 
  89:Src/main.c    ****         /* USER CODE BEGIN Init */
  90:Src/main.c    **** 
ARM GAS  /tmp/ccEb6N98.s 			page 3


  91:Src/main.c    ****         /* USER CODE END Init */
  92:Src/main.c    **** 
  93:Src/main.c    ****         /* Configure the system clock */
  94:Src/main.c    ****         SystemClock_Config();
  95:Src/main.c    **** 
  96:Src/main.c    ****         /* USER CODE BEGIN SysInit */
  97:Src/main.c    **** 
  98:Src/main.c    ****         /* USER CODE END SysInit */
  99:Src/main.c    **** 
 100:Src/main.c    ****         /* Initialize all configured peripherals */
 101:Src/main.c    ****         MX_GPIO_Init();
 102:Src/main.c    ****         /* USER CODE BEGIN 2 */
 103:Src/main.c    ****         LCD_DRIVER lcd;
 104:Src/main.c    ****         /*Register Pin init*/
 105:Src/main.c    ****         lcd.enPin.PIN = pinEN_Pin;
 106:Src/main.c    ****         lcd.rsPin.PIN = pinRS_Pin;
 107:Src/main.c    ****         lcd.rwPin.PIN = pinRW_Pin;
 108:Src/main.c    **** 
 109:Src/main.c    ****         /*Register GPIO sector init*/
 110:Src/main.c    ****         lcd.enPin.GPIOSEKTOR = pinEN_GPIO_Port;
 111:Src/main.c    ****         lcd.rsPin.GPIOSEKTOR = pinRS_GPIO_Port;
 112:Src/main.c    ****         lcd.rwPin.GPIOSEKTOR = pinRW_GPIO_Port;
 113:Src/main.c    **** 
 114:Src/main.c    ****         /*BIT 0-7*/
 115:Src/main.c    ****         lcd.BIT0.GPIOSEKTOR = pinD0_GPIO_Port;
 116:Src/main.c    ****         lcd.BIT1.GPIOSEKTOR = pinD1_GPIO_Port;
 117:Src/main.c    ****         lcd.BIT2.GPIOSEKTOR = pinD2_GPIO_Port;
 118:Src/main.c    ****         lcd.BIT3.GPIOSEKTOR = pinD3_GPIO_Port;
 119:Src/main.c    ****         lcd.BIT4.GPIOSEKTOR = pinD4_GPIO_Port;
 120:Src/main.c    ****         lcd.BIT5.GPIOSEKTOR = pinD5_GPIO_Port;
 121:Src/main.c    ****         lcd.BIT6.GPIOSEKTOR = pinD6_GPIO_Port;
 122:Src/main.c    ****         lcd.BIT7.GPIOSEKTOR = pinD7_GPIO_Port;
 123:Src/main.c    **** 
 124:Src/main.c    ****         lcd.BIT0.PIN = pinD0_Pin;
 125:Src/main.c    ****         lcd.BIT1.PIN = pinD1_Pin;
 126:Src/main.c    ****         lcd.BIT2.PIN = pinD2_Pin;
 127:Src/main.c    ****         lcd.BIT3.PIN = pinD3_Pin;
 128:Src/main.c    ****         lcd.BIT4.PIN = pinD4_Pin;
 129:Src/main.c    ****         lcd.BIT5.PIN = pinD5_Pin;
 130:Src/main.c    ****         lcd.BIT6.PIN = pinD6_Pin;
 131:Src/main.c    ****         lcd.BIT7.PIN = pinD7_Pin;
 132:Src/main.c    **** 
 133:Src/main.c    ****         /* USER CODE END 2 */
 134:Src/main.c    **** 
 135:Src/main.c    ****         beginLCD(&lcd);
 136:Src/main.c    ****         /* Infinite loop */
 137:Src/main.c    ****         while (1) {
 138:Src/main.c    ****                 /* USER CODE BEGIN WHILE */
 139:Src/main.c    ****                 // sendcharTolcd("i", &lcd);
 140:Src/main.c    ****                 sendcharTolcd("test", &lcd);
 141:Src/main.c    ****                 /* USER CODE END WHILE */
 142:Src/main.c    ****         }
 143:Src/main.c    **** 
 144:Src/main.c    ****         /* USER CODE BEGIN 3 */
 145:Src/main.c    ****         /* USER CODE END 3 */
 146:Src/main.c    **** }
 147:Src/main.c    **** 
ARM GAS  /tmp/ccEb6N98.s 			page 4


 148:Src/main.c    **** /**
 149:Src/main.c    ****  * @brief System Clock Configuration
 150:Src/main.c    ****  * @retval None
 151:Src/main.c    ****  */
 152:Src/main.c    **** void SystemClock_Config(void) {
 153:Src/main.c    **** 
 154:Src/main.c    ****         RCC_OscInitTypeDef RCC_OscInitStruct;
 155:Src/main.c    ****         RCC_ClkInitTypeDef RCC_ClkInitStruct;
 156:Src/main.c    **** 
 157:Src/main.c    ****         /**Initializes the CPU, AHB and APB busses clocks
 158:Src/main.c    ****          */
 159:Src/main.c    ****         RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 160:Src/main.c    ****         RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 161:Src/main.c    ****         RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 162:Src/main.c    ****         RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 163:Src/main.c    ****         RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 164:Src/main.c    ****         RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 165:Src/main.c    ****         RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 166:Src/main.c    ****         if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 167:Src/main.c    ****                 _Error_Handler(__FILE__, __LINE__);
 168:Src/main.c    ****         }
 169:Src/main.c    **** 
 170:Src/main.c    ****         /**Initializes the CPU, AHB and APB busses clocks
 171:Src/main.c    ****          */
 172:Src/main.c    ****         RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK |
 173:Src/main.c    ****                                       RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 174:Src/main.c    ****         RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 175:Src/main.c    ****         RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 176:Src/main.c    ****         RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 177:Src/main.c    ****         RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 178:Src/main.c    **** 
 179:Src/main.c    ****         if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK) {
 180:Src/main.c    ****                 _Error_Handler(__FILE__, __LINE__);
 181:Src/main.c    ****         }
 182:Src/main.c    **** 
 183:Src/main.c    ****         /**Configure the Systick interrupt time
 184:Src/main.c    ****          */
 185:Src/main.c    ****         HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq() / 1000);
 186:Src/main.c    **** 
 187:Src/main.c    ****         /**Configure the Systick
 188:Src/main.c    ****          */
 189:Src/main.c    ****         HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 190:Src/main.c    **** 
 191:Src/main.c    ****         /* SysTick_IRQn interrupt configuration */
 192:Src/main.c    ****         HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 193:Src/main.c    **** }
 194:Src/main.c    **** 
 195:Src/main.c    **** /** Configure pins as
 196:Src/main.c    ****  * Analog
 197:Src/main.c    ****  * Input
 198:Src/main.c    ****  * Output
 199:Src/main.c    ****  * EVENT_OUT
 200:Src/main.c    ****  * EXTI
 201:Src/main.c    ****  */
 202:Src/main.c    **** static void MX_GPIO_Init(void) {
  26              		.loc 1 202 32 view -0
  27              		.cfi_startproc
ARM GAS  /tmp/ccEb6N98.s 			page 5


  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 24
  33              		.cfi_offset 4, -24
  34              		.cfi_offset 5, -20
  35              		.cfi_offset 6, -16
  36              		.cfi_offset 7, -12
  37              		.cfi_offset 8, -8
  38              		.cfi_offset 14, -4
  39 0004 88B0     		sub	sp, sp, #32
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 56
 203:Src/main.c    **** 
 204:Src/main.c    ****         GPIO_InitTypeDef GPIO_InitStruct;
  42              		.loc 1 204 9 view .LVU1
 205:Src/main.c    **** 
 206:Src/main.c    ****         /* GPIO Ports Clock Enable */
 207:Src/main.c    ****         __HAL_RCC_GPIOD_CLK_ENABLE();
  43              		.loc 1 207 9 view .LVU2
  44              	.LBB2:
  45              		.loc 1 207 9 view .LVU3
  46              		.loc 1 207 9 view .LVU4
  47 0006 224B     		ldr	r3, .L3
  48 0008 9A69     		ldr	r2, [r3, #24]
  49 000a 42F02002 		orr	r2, r2, #32
  50 000e 9A61     		str	r2, [r3, #24]
  51              		.loc 1 207 9 view .LVU5
  52 0010 9A69     		ldr	r2, [r3, #24]
  53 0012 02F02002 		and	r2, r2, #32
  54 0016 0192     		str	r2, [sp, #4]
  55              		.loc 1 207 9 view .LVU6
  56 0018 019A     		ldr	r2, [sp, #4]
  57              	.LBE2:
 208:Src/main.c    ****         __HAL_RCC_GPIOB_CLK_ENABLE();
  58              		.loc 1 208 9 view .LVU7
  59              	.LBB3:
  60              		.loc 1 208 9 view .LVU8
  61              		.loc 1 208 9 view .LVU9
  62 001a 9A69     		ldr	r2, [r3, #24]
  63 001c 42F00802 		orr	r2, r2, #8
  64 0020 9A61     		str	r2, [r3, #24]
  65              		.loc 1 208 9 view .LVU10
  66 0022 9A69     		ldr	r2, [r3, #24]
  67 0024 02F00802 		and	r2, r2, #8
  68 0028 0292     		str	r2, [sp, #8]
  69              		.loc 1 208 9 view .LVU11
  70 002a 029A     		ldr	r2, [sp, #8]
  71              	.LBE3:
 209:Src/main.c    ****         __HAL_RCC_GPIOA_CLK_ENABLE();
  72              		.loc 1 209 9 view .LVU12
  73              	.LBB4:
  74              		.loc 1 209 9 view .LVU13
  75              		.loc 1 209 9 view .LVU14
  76 002c 9A69     		ldr	r2, [r3, #24]
  77 002e 42F00402 		orr	r2, r2, #4
ARM GAS  /tmp/ccEb6N98.s 			page 6


  78 0032 9A61     		str	r2, [r3, #24]
  79              		.loc 1 209 9 view .LVU15
  80 0034 9B69     		ldr	r3, [r3, #24]
  81 0036 03F00403 		and	r3, r3, #4
  82 003a 0393     		str	r3, [sp, #12]
  83              		.loc 1 209 9 view .LVU16
  84 003c 039B     		ldr	r3, [sp, #12]
  85              	.LBE4:
 210:Src/main.c    **** 
 211:Src/main.c    ****         /*Configure GPIO pin Output Level */
 212:Src/main.c    ****         HAL_GPIO_WritePin(GPIOB,
  86              		.loc 1 212 9 view .LVU17
  87 003e DFF85880 		ldr	r8, .L3+8
  88 0042 0022     		movs	r2, #0
  89 0044 4FF64061 		movw	r1, #65088
  90 0048 4046     		mov	r0, r8
  91 004a FFF7FEFF 		bl	HAL_GPIO_WritePin
  92              	.LVL0:
 213:Src/main.c    ****                           pinRW_Pin | pinRS_Pin | pinD7_Pin | pinD6_Pin | pinD5_Pin |
 214:Src/main.c    ****                           pinD4_Pin | pinD0_Pin | pinEN_Pin,
 215:Src/main.c    ****                           GPIO_PIN_RESET);
 216:Src/main.c    **** 
 217:Src/main.c    ****         /*Configure GPIO pin Output Level */
 218:Src/main.c    ****         HAL_GPIO_WritePin(GPIOA, pinD3_Pin | pinD2_Pin | pinD1_Pin, GPIO_PIN_RESET);
  93              		.loc 1 218 9 view .LVU18
  94 004e 114C     		ldr	r4, .L3+4
  95 0050 0022     		movs	r2, #0
  96 0052 4FF4D051 		mov	r1, #6656
  97 0056 2046     		mov	r0, r4
  98 0058 FFF7FEFF 		bl	HAL_GPIO_WritePin
  99              	.LVL1:
 219:Src/main.c    **** 
 220:Src/main.c    ****         /*Configure GPIO pins : pinRW_Pin pinRS_Pin pinD7_Pin pinD6_Pin
 221:Src/main.c    ****                                  pinD5_Pin pinD4_Pin pinD0_Pin pinEN_Pin */
 222:Src/main.c    ****         GPIO_InitStruct.Pin = pinRW_Pin | pinRS_Pin | pinD7_Pin | pinD6_Pin |
 100              		.loc 1 222 9 view .LVU19
 101              		.loc 1 222 29 is_stmt 0 view .LVU20
 102 005c 4FF64063 		movw	r3, #65088
 103 0060 0493     		str	r3, [sp, #16]
 223:Src/main.c    ****                               pinD5_Pin | pinD4_Pin | pinD0_Pin | pinEN_Pin;
 224:Src/main.c    ****         GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 104              		.loc 1 224 9 is_stmt 1 view .LVU21
 105              		.loc 1 224 30 is_stmt 0 view .LVU22
 106 0062 0127     		movs	r7, #1
 107 0064 0597     		str	r7, [sp, #20]
 225:Src/main.c    ****         GPIO_InitStruct.Pull = GPIO_NOPULL;
 108              		.loc 1 225 9 is_stmt 1 view .LVU23
 109              		.loc 1 225 30 is_stmt 0 view .LVU24
 110 0066 0026     		movs	r6, #0
 111 0068 0696     		str	r6, [sp, #24]
 226:Src/main.c    ****         GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 112              		.loc 1 226 9 is_stmt 1 view .LVU25
 113              		.loc 1 226 31 is_stmt 0 view .LVU26
 114 006a 0225     		movs	r5, #2
 115 006c 0795     		str	r5, [sp, #28]
 227:Src/main.c    ****         HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 116              		.loc 1 227 9 is_stmt 1 view .LVU27
ARM GAS  /tmp/ccEb6N98.s 			page 7


 117 006e 04A9     		add	r1, sp, #16
 118 0070 4046     		mov	r0, r8
 119 0072 FFF7FEFF 		bl	HAL_GPIO_Init
 120              	.LVL2:
 228:Src/main.c    **** 
 229:Src/main.c    ****         /*Configure GPIO pins : pinD3_Pin pinD2_Pin pinD1_Pin */
 230:Src/main.c    ****         GPIO_InitStruct.Pin = pinD3_Pin | pinD2_Pin | pinD1_Pin;
 121              		.loc 1 230 9 view .LVU28
 122              		.loc 1 230 29 is_stmt 0 view .LVU29
 123 0076 4FF4D053 		mov	r3, #6656
 124 007a 0493     		str	r3, [sp, #16]
 231:Src/main.c    ****         GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 125              		.loc 1 231 9 is_stmt 1 view .LVU30
 126              		.loc 1 231 30 is_stmt 0 view .LVU31
 127 007c 0597     		str	r7, [sp, #20]
 232:Src/main.c    ****         GPIO_InitStruct.Pull = GPIO_NOPULL;
 128              		.loc 1 232 9 is_stmt 1 view .LVU32
 129              		.loc 1 232 30 is_stmt 0 view .LVU33
 130 007e 0696     		str	r6, [sp, #24]
 233:Src/main.c    ****         GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 131              		.loc 1 233 9 is_stmt 1 view .LVU34
 132              		.loc 1 233 31 is_stmt 0 view .LVU35
 133 0080 0795     		str	r5, [sp, #28]
 234:Src/main.c    ****         HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 134              		.loc 1 234 9 is_stmt 1 view .LVU36
 135 0082 04A9     		add	r1, sp, #16
 136 0084 2046     		mov	r0, r4
 137 0086 FFF7FEFF 		bl	HAL_GPIO_Init
 138              	.LVL3:
 235:Src/main.c    **** }
 139              		.loc 1 235 1 is_stmt 0 view .LVU37
 140 008a 08B0     		add	sp, sp, #32
 141              	.LCFI2:
 142              		.cfi_def_cfa_offset 24
 143              		@ sp needed
 144 008c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 145              	.L4:
 146              		.align	2
 147              	.L3:
 148 0090 00100240 		.word	1073876992
 149 0094 00080140 		.word	1073809408
 150 0098 000C0140 		.word	1073810432
 151              		.cfi_endproc
 152              	.LFE68:
 154              		.section	.text._Error_Handler,"ax",%progbits
 155              		.align	1
 156              		.global	_Error_Handler
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 160              		.fpu softvfp
 162              	_Error_Handler:
 163              	.LFB69:
 236:Src/main.c    **** 
 237:Src/main.c    **** /* USER CODE BEGIN 4 */
 238:Src/main.c    **** 
 239:Src/main.c    **** /* USER CODE END 4 */
ARM GAS  /tmp/ccEb6N98.s 			page 8


 240:Src/main.c    **** 
 241:Src/main.c    **** /**
 242:Src/main.c    ****  * @brief  This function is executed in case of error occurrence.
 243:Src/main.c    ****  * @param  file: The file name as string.
 244:Src/main.c    ****  * @param  line: The line in file as a number.
 245:Src/main.c    ****  * @retval None
 246:Src/main.c    ****  */
 247:Src/main.c    **** void _Error_Handler(char *file, int line) {
 164              		.loc 1 247 43 is_stmt 1 view -0
 165              		.cfi_startproc
 166              		@ Volatile: function does not return.
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169              		@ link register save eliminated.
 170              	.LVL4:
 171              	.L6:
 248:Src/main.c    ****         /* USER CODE BEGIN Error_Handler_Debug */
 249:Src/main.c    ****         /* User can add his own implementation to report the HAL error return state */
 250:Src/main.c    ****         while (1) {
 172              		.loc 1 250 9 discriminator 1 view .LVU39
 251:Src/main.c    ****         }
 173              		.loc 1 251 9 discriminator 1 view .LVU40
 174 0000 FEE7     		b	.L6
 175              		.cfi_endproc
 176              	.LFE69:
 178              		.section	.text.SystemClock_Config,"ax",%progbits
 179              		.align	1
 180              		.global	SystemClock_Config
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 184              		.fpu softvfp
 186              	SystemClock_Config:
 187              	.LFB67:
 152:Src/main.c    **** 
 188              		.loc 1 152 31 view -0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 64
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192 0000 00B5     		push	{lr}
 193              	.LCFI3:
 194              		.cfi_def_cfa_offset 4
 195              		.cfi_offset 14, -4
 196 0002 91B0     		sub	sp, sp, #68
 197              	.LCFI4:
 198              		.cfi_def_cfa_offset 72
 154:Src/main.c    ****         RCC_ClkInitTypeDef RCC_ClkInitStruct;
 199              		.loc 1 154 9 view .LVU42
 155:Src/main.c    **** 
 200              		.loc 1 155 9 view .LVU43
 159:Src/main.c    ****         RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 201              		.loc 1 159 9 view .LVU44
 159:Src/main.c    ****         RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 202              		.loc 1 159 42 is_stmt 0 view .LVU45
 203 0004 0122     		movs	r2, #1
 204 0006 0692     		str	r2, [sp, #24]
 160:Src/main.c    ****         RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
ARM GAS  /tmp/ccEb6N98.s 			page 9


 205              		.loc 1 160 9 is_stmt 1 view .LVU46
 160:Src/main.c    ****         RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 206              		.loc 1 160 36 is_stmt 0 view .LVU47
 207 0008 4FF48033 		mov	r3, #65536
 208 000c 0793     		str	r3, [sp, #28]
 161:Src/main.c    ****         RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 209              		.loc 1 161 9 is_stmt 1 view .LVU48
 161:Src/main.c    ****         RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 210              		.loc 1 161 42 is_stmt 0 view .LVU49
 211 000e 0021     		movs	r1, #0
 212 0010 0891     		str	r1, [sp, #32]
 162:Src/main.c    ****         RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 213              		.loc 1 162 9 is_stmt 1 view .LVU50
 162:Src/main.c    ****         RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 214              		.loc 1 162 36 is_stmt 0 view .LVU51
 215 0012 0A92     		str	r2, [sp, #40]
 163:Src/main.c    ****         RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 216              		.loc 1 163 9 is_stmt 1 view .LVU52
 163:Src/main.c    ****         RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 217              		.loc 1 163 40 is_stmt 0 view .LVU53
 218 0014 0222     		movs	r2, #2
 219 0016 0D92     		str	r2, [sp, #52]
 164:Src/main.c    ****         RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 220              		.loc 1 164 9 is_stmt 1 view .LVU54
 164:Src/main.c    ****         RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 221              		.loc 1 164 41 is_stmt 0 view .LVU55
 222 0018 0E93     		str	r3, [sp, #56]
 165:Src/main.c    ****         if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 223              		.loc 1 165 9 is_stmt 1 view .LVU56
 165:Src/main.c    ****         if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 224              		.loc 1 165 38 is_stmt 0 view .LVU57
 225 001a 4FF4E013 		mov	r3, #1835008
 226 001e 0F93     		str	r3, [sp, #60]
 166:Src/main.c    ****                 _Error_Handler(__FILE__, __LINE__);
 227              		.loc 1 166 9 is_stmt 1 view .LVU58
 166:Src/main.c    ****                 _Error_Handler(__FILE__, __LINE__);
 228              		.loc 1 166 13 is_stmt 0 view .LVU59
 229 0020 06A8     		add	r0, sp, #24
 230 0022 FFF7FEFF 		bl	HAL_RCC_OscConfig
 231              	.LVL5:
 166:Src/main.c    ****                 _Error_Handler(__FILE__, __LINE__);
 232              		.loc 1 166 12 view .LVU60
 233 0026 08BB     		cbnz	r0, .L11
 172:Src/main.c    ****                                       RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 234              		.loc 1 172 9 is_stmt 1 view .LVU61
 172:Src/main.c    ****                                       RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 235              		.loc 1 172 37 is_stmt 0 view .LVU62
 236 0028 0F23     		movs	r3, #15
 237 002a 0193     		str	r3, [sp, #4]
 174:Src/main.c    ****         RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 238              		.loc 1 174 9 is_stmt 1 view .LVU63
 174:Src/main.c    ****         RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 239              		.loc 1 174 40 is_stmt 0 view .LVU64
 240 002c 0221     		movs	r1, #2
 241 002e 0291     		str	r1, [sp, #8]
 175:Src/main.c    ****         RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 242              		.loc 1 175 9 is_stmt 1 view .LVU65
ARM GAS  /tmp/ccEb6N98.s 			page 10


 175:Src/main.c    ****         RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 243              		.loc 1 175 41 is_stmt 0 view .LVU66
 244 0030 0023     		movs	r3, #0
 245 0032 0393     		str	r3, [sp, #12]
 176:Src/main.c    ****         RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 246              		.loc 1 176 9 is_stmt 1 view .LVU67
 176:Src/main.c    ****         RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 247              		.loc 1 176 42 is_stmt 0 view .LVU68
 248 0034 4FF48062 		mov	r2, #1024
 249 0038 0492     		str	r2, [sp, #16]
 177:Src/main.c    **** 
 250              		.loc 1 177 9 is_stmt 1 view .LVU69
 177:Src/main.c    **** 
 251              		.loc 1 177 42 is_stmt 0 view .LVU70
 252 003a 0593     		str	r3, [sp, #20]
 179:Src/main.c    ****                 _Error_Handler(__FILE__, __LINE__);
 253              		.loc 1 179 9 is_stmt 1 view .LVU71
 179:Src/main.c    ****                 _Error_Handler(__FILE__, __LINE__);
 254              		.loc 1 179 13 is_stmt 0 view .LVU72
 255 003c 01A8     		add	r0, sp, #4
 256 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 257              	.LVL6:
 179:Src/main.c    ****                 _Error_Handler(__FILE__, __LINE__);
 258              		.loc 1 179 12 view .LVU73
 259 0042 B8B9     		cbnz	r0, .L12
 185:Src/main.c    **** 
 260              		.loc 1 185 9 is_stmt 1 view .LVU74
 185:Src/main.c    **** 
 261              		.loc 1 185 28 is_stmt 0 view .LVU75
 262 0044 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 263              	.LVL7:
 185:Src/main.c    **** 
 264              		.loc 1 185 9 view .LVU76
 265 0048 0C4B     		ldr	r3, .L13
 266 004a A3FB0030 		umull	r3, r0, r3, r0
 267 004e 8009     		lsrs	r0, r0, #6
 268 0050 FFF7FEFF 		bl	HAL_SYSTICK_Config
 269              	.LVL8:
 189:Src/main.c    **** 
 270              		.loc 1 189 9 is_stmt 1 view .LVU77
 271 0054 0420     		movs	r0, #4
 272 0056 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 273              	.LVL9:
 192:Src/main.c    **** }
 274              		.loc 1 192 9 view .LVU78
 275 005a 0022     		movs	r2, #0
 276 005c 1146     		mov	r1, r2
 277 005e 4FF0FF30 		mov	r0, #-1
 278 0062 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 279              	.LVL10:
 193:Src/main.c    **** 
 280              		.loc 1 193 1 is_stmt 0 view .LVU79
 281 0066 11B0     		add	sp, sp, #68
 282              	.LCFI5:
 283              		.cfi_remember_state
 284              		.cfi_def_cfa_offset 4
 285              		@ sp needed
ARM GAS  /tmp/ccEb6N98.s 			page 11


 286 0068 5DF804FB 		ldr	pc, [sp], #4
 287              	.L11:
 288              	.LCFI6:
 289              		.cfi_restore_state
 167:Src/main.c    ****         }
 290              		.loc 1 167 17 is_stmt 1 view .LVU80
 291 006c A721     		movs	r1, #167
 292 006e 0448     		ldr	r0, .L13+4
 293 0070 FFF7FEFF 		bl	_Error_Handler
 294              	.LVL11:
 295              	.L12:
 180:Src/main.c    ****         }
 296              		.loc 1 180 17 view .LVU81
 297 0074 B421     		movs	r1, #180
 298 0076 0248     		ldr	r0, .L13+4
 299 0078 FFF7FEFF 		bl	_Error_Handler
 300              	.LVL12:
 301              	.L14:
 302              		.align	2
 303              	.L13:
 304 007c D34D6210 		.word	274877907
 305 0080 00000000 		.word	.LC0
 306              		.cfi_endproc
 307              	.LFE67:
 309              		.section	.text.main,"ax",%progbits
 310              		.align	1
 311              		.global	main
 312              		.syntax unified
 313              		.thumb
 314              		.thumb_func
 315              		.fpu softvfp
 317              	main:
 318              	.LFB66:
  77:Src/main.c    ****         /* USER CODE BEGIN 1 */
 319              		.loc 1 77 16 view -0
 320              		.cfi_startproc
 321              		@ Volatile: function does not return.
 322              		@ args = 0, pretend = 0, frame = 88
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324 0000 00B5     		push	{lr}
 325              	.LCFI7:
 326              		.cfi_def_cfa_offset 4
 327              		.cfi_offset 14, -4
 328 0002 97B0     		sub	sp, sp, #92
 329              	.LCFI8:
 330              		.cfi_def_cfa_offset 96
  87:Src/main.c    **** 
 331              		.loc 1 87 9 view .LVU83
 332 0004 FFF7FEFF 		bl	HAL_Init
 333              	.LVL13:
  94:Src/main.c    **** 
 334              		.loc 1 94 9 view .LVU84
 335 0008 FFF7FEFF 		bl	SystemClock_Config
 336              	.LVL14:
 101:Src/main.c    ****         /* USER CODE BEGIN 2 */
 337              		.loc 1 101 9 view .LVU85
 338 000c FFF7FEFF 		bl	MX_GPIO_Init
ARM GAS  /tmp/ccEb6N98.s 			page 12


 339              	.LVL15:
 103:Src/main.c    ****         /*Register Pin init*/
 340              		.loc 1 103 9 view .LVU86
 105:Src/main.c    ****         lcd.rsPin.PIN = pinRS_Pin;
 341              		.loc 1 105 9 view .LVU87
 105:Src/main.c    ****         lcd.rsPin.PIN = pinRS_Pin;
 342              		.loc 1 105 23 is_stmt 0 view .LVU88
 343 0010 4FF40071 		mov	r1, #512
 344 0014 ADF80410 		strh	r1, [sp, #4]	@ movhi
 106:Src/main.c    ****         lcd.rwPin.PIN = pinRW_Pin;
 345              		.loc 1 106 9 is_stmt 1 view .LVU89
 106:Src/main.c    ****         lcd.rwPin.PIN = pinRW_Pin;
 346              		.loc 1 106 23 is_stmt 0 view .LVU90
 347 0018 4FF40060 		mov	r0, #2048
 348 001c ADF80C00 		strh	r0, [sp, #12]	@ movhi
 107:Src/main.c    **** 
 349              		.loc 1 107 9 is_stmt 1 view .LVU91
 107:Src/main.c    **** 
 350              		.loc 1 107 23 is_stmt 0 view .LVU92
 351 0020 4FF48063 		mov	r3, #1024
 352 0024 ADF81430 		strh	r3, [sp, #20]	@ movhi
 110:Src/main.c    ****         lcd.rsPin.GPIOSEKTOR = pinRS_GPIO_Port;
 353              		.loc 1 110 9 is_stmt 1 view .LVU93
 110:Src/main.c    ****         lcd.rsPin.GPIOSEKTOR = pinRS_GPIO_Port;
 354              		.loc 1 110 30 is_stmt 0 view .LVU94
 355 0028 164B     		ldr	r3, .L18
 356 002a 0093     		str	r3, [sp]
 111:Src/main.c    ****         lcd.rwPin.GPIOSEKTOR = pinRW_GPIO_Port;
 357              		.loc 1 111 9 is_stmt 1 view .LVU95
 111:Src/main.c    ****         lcd.rwPin.GPIOSEKTOR = pinRW_GPIO_Port;
 358              		.loc 1 111 30 is_stmt 0 view .LVU96
 359 002c 0293     		str	r3, [sp, #8]
 112:Src/main.c    **** 
 360              		.loc 1 112 9 is_stmt 1 view .LVU97
 112:Src/main.c    **** 
 361              		.loc 1 112 30 is_stmt 0 view .LVU98
 362 002e 0493     		str	r3, [sp, #16]
 115:Src/main.c    ****         lcd.BIT1.GPIOSEKTOR = pinD1_GPIO_Port;
 363              		.loc 1 115 9 is_stmt 1 view .LVU99
 115:Src/main.c    ****         lcd.BIT1.GPIOSEKTOR = pinD1_GPIO_Port;
 364              		.loc 1 115 29 is_stmt 0 view .LVU100
 365 0030 0693     		str	r3, [sp, #24]
 116:Src/main.c    ****         lcd.BIT2.GPIOSEKTOR = pinD2_GPIO_Port;
 366              		.loc 1 116 9 is_stmt 1 view .LVU101
 116:Src/main.c    ****         lcd.BIT2.GPIOSEKTOR = pinD2_GPIO_Port;
 367              		.loc 1 116 29 is_stmt 0 view .LVU102
 368 0032 154A     		ldr	r2, .L18+4
 369 0034 0892     		str	r2, [sp, #32]
 117:Src/main.c    ****         lcd.BIT3.GPIOSEKTOR = pinD3_GPIO_Port;
 370              		.loc 1 117 9 is_stmt 1 view .LVU103
 117:Src/main.c    ****         lcd.BIT3.GPIOSEKTOR = pinD3_GPIO_Port;
 371              		.loc 1 117 29 is_stmt 0 view .LVU104
 372 0036 0A92     		str	r2, [sp, #40]
 118:Src/main.c    ****         lcd.BIT4.GPIOSEKTOR = pinD4_GPIO_Port;
 373              		.loc 1 118 9 is_stmt 1 view .LVU105
 118:Src/main.c    ****         lcd.BIT4.GPIOSEKTOR = pinD4_GPIO_Port;
 374              		.loc 1 118 29 is_stmt 0 view .LVU106
ARM GAS  /tmp/ccEb6N98.s 			page 13


 375 0038 0C92     		str	r2, [sp, #48]
 119:Src/main.c    ****         lcd.BIT5.GPIOSEKTOR = pinD5_GPIO_Port;
 376              		.loc 1 119 9 is_stmt 1 view .LVU107
 119:Src/main.c    ****         lcd.BIT5.GPIOSEKTOR = pinD5_GPIO_Port;
 377              		.loc 1 119 29 is_stmt 0 view .LVU108
 378 003a 0E93     		str	r3, [sp, #56]
 120:Src/main.c    ****         lcd.BIT6.GPIOSEKTOR = pinD6_GPIO_Port;
 379              		.loc 1 120 9 is_stmt 1 view .LVU109
 120:Src/main.c    ****         lcd.BIT6.GPIOSEKTOR = pinD6_GPIO_Port;
 380              		.loc 1 120 29 is_stmt 0 view .LVU110
 381 003c 1093     		str	r3, [sp, #64]
 121:Src/main.c    ****         lcd.BIT7.GPIOSEKTOR = pinD7_GPIO_Port;
 382              		.loc 1 121 9 is_stmt 1 view .LVU111
 121:Src/main.c    ****         lcd.BIT7.GPIOSEKTOR = pinD7_GPIO_Port;
 383              		.loc 1 121 29 is_stmt 0 view .LVU112
 384 003e 1293     		str	r3, [sp, #72]
 122:Src/main.c    **** 
 385              		.loc 1 122 9 is_stmt 1 view .LVU113
 122:Src/main.c    **** 
 386              		.loc 1 122 29 is_stmt 0 view .LVU114
 387 0040 1493     		str	r3, [sp, #80]
 124:Src/main.c    ****         lcd.BIT1.PIN = pinD1_Pin;
 388              		.loc 1 124 9 is_stmt 1 view .LVU115
 124:Src/main.c    ****         lcd.BIT1.PIN = pinD1_Pin;
 389              		.loc 1 124 22 is_stmt 0 view .LVU116
 390 0042 4023     		movs	r3, #64
 391 0044 ADF81C30 		strh	r3, [sp, #28]	@ movhi
 125:Src/main.c    ****         lcd.BIT2.PIN = pinD2_Pin;
 392              		.loc 1 125 9 is_stmt 1 view .LVU117
 125:Src/main.c    ****         lcd.BIT2.PIN = pinD2_Pin;
 393              		.loc 1 125 22 is_stmt 0 view .LVU118
 394 0048 4FF48053 		mov	r3, #4096
 395 004c ADF82430 		strh	r3, [sp, #36]	@ movhi
 126:Src/main.c    ****         lcd.BIT3.PIN = pinD3_Pin;
 396              		.loc 1 126 9 is_stmt 1 view .LVU119
 126:Src/main.c    ****         lcd.BIT3.PIN = pinD3_Pin;
 397              		.loc 1 126 22 is_stmt 0 view .LVU120
 398 0050 ADF82C00 		strh	r0, [sp, #44]	@ movhi
 127:Src/main.c    ****         lcd.BIT4.PIN = pinD4_Pin;
 399              		.loc 1 127 9 is_stmt 1 view .LVU121
 127:Src/main.c    ****         lcd.BIT4.PIN = pinD4_Pin;
 400              		.loc 1 127 22 is_stmt 0 view .LVU122
 401 0054 ADF83410 		strh	r1, [sp, #52]	@ movhi
 128:Src/main.c    ****         lcd.BIT5.PIN = pinD5_Pin;
 402              		.loc 1 128 9 is_stmt 1 view .LVU123
 128:Src/main.c    ****         lcd.BIT5.PIN = pinD5_Pin;
 403              		.loc 1 128 22 is_stmt 0 view .LVU124
 404 0058 4FF40042 		mov	r2, #32768
 405 005c ADF83C20 		strh	r2, [sp, #60]	@ movhi
 129:Src/main.c    ****         lcd.BIT6.PIN = pinD6_Pin;
 406              		.loc 1 129 9 is_stmt 1 view .LVU125
 129:Src/main.c    ****         lcd.BIT6.PIN = pinD6_Pin;
 407              		.loc 1 129 22 is_stmt 0 view .LVU126
 408 0060 4FF48042 		mov	r2, #16384
 409 0064 ADF84420 		strh	r2, [sp, #68]	@ movhi
 130:Src/main.c    ****         lcd.BIT7.PIN = pinD7_Pin;
 410              		.loc 1 130 9 is_stmt 1 view .LVU127
ARM GAS  /tmp/ccEb6N98.s 			page 14


 130:Src/main.c    ****         lcd.BIT7.PIN = pinD7_Pin;
 411              		.loc 1 130 22 is_stmt 0 view .LVU128
 412 0068 4FF40052 		mov	r2, #8192
 413 006c ADF84C20 		strh	r2, [sp, #76]	@ movhi
 131:Src/main.c    **** 
 414              		.loc 1 131 9 is_stmt 1 view .LVU129
 131:Src/main.c    **** 
 415              		.loc 1 131 22 is_stmt 0 view .LVU130
 416 0070 ADF85430 		strh	r3, [sp, #84]	@ movhi
 135:Src/main.c    ****         /* Infinite loop */
 417              		.loc 1 135 9 is_stmt 1 view .LVU131
 418 0074 6846     		mov	r0, sp
 419 0076 FFF7FEFF 		bl	beginLCD
 420              	.LVL16:
 421              	.L16:
 137:Src/main.c    ****                 /* USER CODE BEGIN WHILE */
 422              		.loc 1 137 9 discriminator 1 view .LVU132
 140:Src/main.c    ****                 /* USER CODE END WHILE */
 423              		.loc 1 140 17 discriminator 1 view .LVU133
 424 007a 6946     		mov	r1, sp
 425 007c 0348     		ldr	r0, .L18+8
 426 007e FFF7FEFF 		bl	sendcharTolcd
 427              	.LVL17:
 428 0082 FAE7     		b	.L16
 429              	.L19:
 430              		.align	2
 431              	.L18:
 432 0084 000C0140 		.word	1073810432
 433 0088 00080140 		.word	1073809408
 434 008c 00000000 		.word	.LC1
 435              		.cfi_endproc
 436              	.LFE66:
 438              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 439              		.align	2
 440              	.LC0:
 441 0000 5372632F 		.ascii	"Src/main.c\000"
 441      6D61696E 
 441      2E6300
 442              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 443              		.align	2
 444              	.LC1:
 445 0000 74657374 		.ascii	"test\000"
 445      00
 446              		.text
 447              	.Letext0:
 448              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 449              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 450              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 451              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 452              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 453              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 454              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 455              		.file 9 "/usr/lib/gcc/arm-none-eabi/8.3.0/include/stddef.h"
 456              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
 457              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 458              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 459              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
ARM GAS  /tmp/ccEb6N98.s 			page 15


 460              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 461              		.file 15 "Inc/lib_lcd.h"
 462              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 463              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /tmp/ccEb6N98.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccEb6N98.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccEb6N98.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccEb6N98.s:148    .text.MX_GPIO_Init:0000000000000090 $d
     /tmp/ccEb6N98.s:155    .text._Error_Handler:0000000000000000 $t
     /tmp/ccEb6N98.s:162    .text._Error_Handler:0000000000000000 _Error_Handler
     /tmp/ccEb6N98.s:179    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccEb6N98.s:186    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccEb6N98.s:304    .text.SystemClock_Config:000000000000007c $d
     /tmp/ccEb6N98.s:310    .text.main:0000000000000000 $t
     /tmp/ccEb6N98.s:317    .text.main:0000000000000000 main
     /tmp/ccEb6N98.s:432    .text.main:0000000000000084 $d
     /tmp/ccEb6N98.s:439    .rodata.SystemClock_Config.str1.4:0000000000000000 $d
     /tmp/ccEb6N98.s:443    .rodata.main.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
beginLCD
sendcharTolcd
